name: "Terraform CI/CD Pipeline"

on:
  workflow_dispatch:
  push:
    branches:
      - dev

env:
  WORKING_DIR: "../../infra/todoapp_infra_vm" # Dynamic path based on branch

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: "Terraform Workflow"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ../../infra/todoapp_infra_vm

    env:  # Define Azure credentials at the job level
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    steps:
      # Checkout repository
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      
      # Setup Terraform
      - name: "Setup Terraform"
        uses: actions/hashicorp/setup-terraform@v3
      
      - name: Set environment variable
        run: |
          echo "TF_VAR_AZURE_CLIENT_SECRET=${{ secrets.SERVICEPRINCIPALKEY }}"

      - uses: terraform-linters/setup-tflint@v4

      - name: Show version
        run: tflint --version
  
      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}
  
      - name: Run TFLint
        run: tflint -f compact

      # Configure Azure Authentication (OIDC)
      - name: "Azure Login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.HUB_SUB_ID }}

      # Terraform Initialization
      - name: "Terraform Init"
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo $env.WORKING_DIR
          terraform init -var-file=./environments/dev/dev.tfvars

      # Terraform Validation
      - name: "Terraform Validate"
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform validate

      # Terraform Plan
      - name: "Terraform Plan"
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          echo $env.WORKING_DIR
          terraform plan -var-file=./environments/dev/dev.tfvars -out=tfplan

      # Terraform Apply
      - name: "Terraform Apply"
        working-directory: ${{ env.WORKING_DIR }}
        run: terraform apply "tfplan"
